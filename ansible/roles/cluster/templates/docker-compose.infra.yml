version: '2'

volumes:
  pg01db:
  pg01archive:
  pg01backup:

networks:
  default:
    external:
      name: ${INFRA_NETWORK_NAME}

services:
  #Service registry - Consul configuration + Registrator (HAProxy - Consul)
  consul:
    image: consul:latest

  #Registrator -> register docker containers into consul
  registrator:
    image: gliderlabs/registrator:latest
    command: " -internal consul://consul:8500"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock

  #Load balancer - HAProxy configuration
  #Configuration done inbehalf with consul
  haproxy:
    image: {{ images.haproxy.name }}:{{ images.haproxy.tag }}
    ports:
      - 8001:80
    environment:
      SERVICE_NAME: haproxy
      CONSUL_ADDRESS: consul:8500

  #Database configuration
  #PGPOOL
  pgpool01:
    image: {{ images.pgpool.name }}:{{ images.pgpool.tag }}
    environment:
      PG_MASTER_NODE_NAME: pg01
      PG_BACKEND_NODE_LIST: ${PG_BACKEND_NODE_LIST}
      PGP_NODE_NAME: pgpool01
      REPMGRPWD: ${REPMGRPDW:-evs123}
    ports:
      - 9999:9999

  #POSTGRESQL
  pg01:
    image: {{ images.postgres.name }}:{{ images.postgres.tag }}
    environment:
      SERVICE_NAME: pg01
      INITIAL_NODE_TYPE: ${INITIAL_NODE_TYPE}
      NODE_ID: ${NODE_ID}
      NODE_NAME: ${PG_NODE_NAME}
      ARCHIVELOG: 1
      MSLIST: ${MSLIST}
      MSOWNERPWDLIST: ${MSOWNERPWDLIST}
      MSUSERPWDLIST: ${MSUSERPWDLIST}
      REPMGRPWD: ${REPMGRPDW:-evs123}

    volumes:
      - pg01db:/u01/pg96/data
      - pg01archive:/u02/archive
      - pg01backup:/u02/backup
    ports:
      - 5432:5432
    privileged: true

  #IAM - Keycloak configuration
  keycloak:
    image: {{ images.keycloak.name }}:{{ images.keycloak.tag }}
    environment:
      SERVICE_NAME: keycloak
      POSTGRES_PORT_5432_TCP_ADDR: pgpool01 # workaround: cannot resolve expression 'jdbc:postgresql:...'
      POSTGRES_PORT_5432_TCP_PORT: 9999
      POSTGRES_DATABASE: phoenix
      POSTGRES_USER: keycloak_owner
      POSTGRES_PASSWORD: keycloak_owner
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: password
    ports:
      - 8101:8080
    depends_on:
      - pgpool01

  #API GATEWAY - Apiman configuration
  apiman:
    image: {{ images.apiman.name }}: {{ images.apiman.tag }}
    environment:
      SERVICE_NAME: apiman
      KEYCLOAK_IP: ${HOST_GATEWAY_IP}
      KEYCLOAK_PORT: 8101
    ports:
      - 8080:8080
      - 8443:8443
    depends_on:
      - keycloak
      - pgpool01

  #Messaging - Kafka configuration
  kafka:
    image: {{ images.kafka.name }}:{{ images.kafka.tag }}
    environment:
      SERVICE_NAME: kafka
      AUTO_CREATE_TOPICS_ENABLE: "true"
      ADVERTISED_LISTENERS: "kafka:9092"
