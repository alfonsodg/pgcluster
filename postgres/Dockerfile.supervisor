FROM centos:7
MAINTAINER p.timmermans@evs.com
ENV MAJORVER=9.6
ENV MINORVER=5
ENV PGVER=96
ENV docker=yes
RUN yum update -y ; yum clean all
RUN yum install -y http://www.pgpool.net/yum/rpms/3.6/redhat/rhel-7-x86_64/pgpool-II-release-3.6-1.noarch.rpm; yum clean all
RUN yum install -y pgpool-II-pg${PGVER}-extensions; yum clean all
RUN yum install -y epel-release libxslt sudo openssh-server openssh-clients jq passwd rsync && \
    yum install -y systemd-sysv iproute python-setuptools hostname inotify-tools yum-utils which && \
    yum clean all
RUN easy_install supervisor
RUN mkdir /var/run/sshd
RUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N ''
ADD https://download.postgresql.org/pub/repos/yum/${MAJORVER}/redhat/rhel-7-x86_64/postgresql${PGVER}-${MAJORVER}.${MINORVER}-1PGDG.rhel7.x86_64.rpm /tmp
ADD https://download.postgresql.org/pub/repos/yum/${MAJORVER}/redhat/rhel-7-x86_64/postgresql${PGVER}-contrib-${MAJORVER}.${MINORVER}-1PGDG.rhel7.x86_64.rpm /tmp
ADD https://download.postgresql.org/pub/repos/yum/${MAJORVER}/redhat/rhel-7-x86_64/postgresql${PGVER}-libs-${MAJORVER}.${MINORVER}-1PGDG.rhel7.x86_64.rpm /tmp
ADD https://download.postgresql.org/pub/repos/yum/${MAJORVER}/redhat/rhel-7-x86_64/postgresql${PGVER}-server-${MAJORVER}.${MINORVER}-1PGDG.rhel7.x86_64.rpm /tmp
RUN useradd -u 50010 postgres
RUN rpm -i /tmp/postgresql${PGVER}-${MAJORVER}.${MINORVER}-1PGDG.rhel7.x86_64.rpm \
           /tmp/postgresql${PGVER}-contrib-${MAJORVER}.${MINORVER}-1PGDG.rhel7.x86_64.rpm \
           /tmp/postgresql${PGVER}-libs-${MAJORVER}.${MINORVER}-1PGDG.rhel7.x86_64.rpm \
           /tmp/postgresql${PGVER}-server-${MAJORVER}.${MINORVER}-1PGDG.rhel7.x86_64.rpm && \
	   rm -f /tmp/postgresql*.rpm
# install repmgr
ADD https://download.postgresql.org/pub/repos/yum/${MAJORVER}/redhat/rhel-7-x86_64/repmgr${PGVER}-3.3.1-1.rhel7.x86_64.rpm /tmp
RUN rpm -i /tmp/repmgr${PGVER}-3.3.1-1.rhel7.x86_64.rpm ;  rm /tmp/repmgr${PGVER}-3.3.1-1.rhel7.x86_64.rpm
RUN chown postgres:postgres /var/log/repmgr
RUN mkdir -p /u01/pg${PGVER}/data /u02/backup /u02/archive && chown -R postgres:postgres /u01/pg${PGVER} /u02/backup /u02/archive && chmod 700 /u01/pg${PGVER}/data /u02/archive
ENV PGDATA /u01/pg${PGVER}/data
ENV PATH=$PATH:/usr/pgsql-${MAJORVER}/bin
ENV LANG=en_US.UTF-8
RUN usermod -G wheel -a postgres 
RUN echo "Defaults:postgres !requiretty" > /etc/sudoers.d/postgres && \
    echo "postgres ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/postgres
RUN sed -i -e "s/^%wheel/#%wheel/" -e "/^#.*%wheel.*NOPASSWD/s/^#.*%wheel/%wheel/" /etc/sudoers
RUN echo postgres:postgres | chpasswd
RUN echo root:postgres | chpasswd
RUN  echo "export PATH=\$PATH:/usr/pgsql-${MAJORVER}/bin" >  /etc/profile.d/postgres.sh
RUN  echo "[ -f /etc/profile ] && source /etc/profile" >> /home/postgres/.bashrc && \
     echo "export PGDATA=/u01/pg${PGVER}/data" >> /home/postgres/.bashrc
#Some useful aliases for replication
RUN echo "alias pool_nodes='psql --username=repmgr -h pgpool01 -p 9999 repmgr -c \"show pool_nodes;\"'" >> /home/postgres/.bashrc && \
    echo "alias cluster_show='repmgr -f /etc/repmgr/${MAJORVER}/repmgr.conf cluster show'" >> /home/postgres/.bashrc && \
    echo "alias cluster_monitor='psql --username=repmgr repmgr -c \"select * from repl_monitor order by last_monitor_time desc limit 1;\"'" >> /home/postgres/.bashrc
#
# this localedef command is needed because of bug in centos docker image?
#
RUN localedef -i en_US -f UTF-8 en_US.UTF-8
RUN echo "*:*:postgres:postgres" > /home/postgres/.pcppass && chmod 600 /home/postgres/.pcppass
ADD scripts /scripts
ADD pgconfig /opt/pgconfig
RUN chown -R postgres:postgres /scripts 
ADD ./bin/entrypoint.supervisor /entrypoint.sh
RUN chmod +x /entrypoint.sh
ADD get_master.sh /home/postgres/get_master.sh
RUN chown postgres:postgres /home/postgres/get_master.sh && chmod 750 /home/postgres/get_master.sh
ADD supervisord.conf /etc/supervisor/supervisord.conf
# Make ssh connection easier
RUN echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config && \
    echo "UserKnownHostsFile /dev/null" >> /etc/ssh/ssh_config && \
    echo "LogLevel QUIET" >> /etc/ssh/ssh_config
ADD ssh_keys /home/postgres/.ssh 
RUN chown -R postgres:postgres /home/postgres/.ssh && chmod 700 /home/postgres/.ssh && chmod 644 /home/postgres/.ssh/* && chmod 600 /home/postgres/.ssh/id_rsa
ENV PATH=$PATH:/usr/pgsql-${MAJORVER}/bin
ADD initdb.sh /scripts/initdb.sh
ADD start_repmgr.sh /scripts/start_repmgr.sh
EXPOSE 5432
EXPOSE 22
VOLUME ["/u01/pg${PGVER}/data","/u02/archive","/u02/backup"]
# if the file $PGDATA/postgres.conf does not exist initdb will initialize the cluster and create db phoenix
#  and db users (two per microservice)
CMD ["/usr/bin/supervisord","--configuration=/etc/supervisor/supervisord.conf"]
