version: '3.2'

networks:
  default:
    external:
      name: pgcluster_network

services:
  pgpool01:
    image: {{ images.pgpool.name }}:{{ images.pgpool.tag }}
    environment:
      PG_MASTER_NODE_NAME: pg01
      PG_BACKEND_NODE_LIST: ${PG_BACKEND_NODE_LIST}
      PGP_NODE_NAME: pgpool01
      REPMGRPWD: ${REPMGRPDW:-rep123}
      NUM_INIT_CHILDREN: 70
      MAX_POOL: 4
      LOG_STATEMENT: "off"
      DEBUG_LEVEL: 0
      #LOG_STATEMENT: "off"
      #DEBUG_LEVEL: 0
      #FAIL_OVER_ON_BACKEND_ERROR: "off"
      #CONNECTION_CACHE: "on"
    volumes:
      - /etc/localtime:/etc/localtime
    ports:
      - 9999:9999
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  pg01:
    image: {{ images.postgres.name }}:{{ images.postgres.tag }}
    environment:
      SERVICE_NAME: pg01
      INITIAL_NODE_TYPE: master
      NODE_ID: 1
      NODE_NAME: pg01
      ARCHIVELOG: 1
      MSLIST: ${MSLIST}
      MSOWNERPWDLIST: ${MSOWNERPWDLIST}
      MSUSERPWDLIST: ${MSUSERPWDLIST}
      REPMGRPWD: ${REPMGRPDW:-rep123}
    deploy:
      placement:
        constraints:
          - node.id == {{ docker_node_1 }}
    volumes:
      - /u01/pg96/data:/u01/pg96/data
      - /u02/archive:/u02/archive
      - /u02/backup:/u02/backup
      - /etc/localtime:/etc/localtime
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host

  pg02:
    image: {{ images.postgres.name }}:{{ images.postgres.tag }}
    environment:
      SERVICE_NAME: pg02
      INITIAL_NODE_TYPE: slave
      NODE_ID: 2
      NODE_NAME: pg02
      ARCHIVELOG: 1
      MSLIST: ${MSLIST}
      MSOWNERPWDLIST: ${MSOWNERPWDLIST}
      MSUSERPWDLIST: ${MSUSERPWDLIST}
      REPMGRPWD: ${REPMGRPDW:-rep123}
    deploy:
      placement:
        constraints:
          - node.id == {{ docker_node_2 }}
    volumes:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - /u01/pg96/data:/u01/pg96/data
      - /u02/archive:/u02/archive
      - /u02/backup:/u02/backup
      - /etc/localtime:/etc/localtime
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host


  #console
  manager:
    image: {{ images.manager.name }}:{{ images.manager.tag }}
    ports:
      - 8080:8080
    environment:
      DOCKERHOST: ${DOCKERHOST}
      PG_BACKEND_NODE_LIST: ${PG_BACKEND_NODE_LIST}
      REPMGRPWD: ${REPMGRPDW:-rep123}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - /u02/backup:/u02/backup
    deploy:
      placement:
        constraints:
          - node.role == manager
    logging:
      driver: journald
      options:
        tag: manager
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

