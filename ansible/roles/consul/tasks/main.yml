---

  # TODO: automatically create groups consul, consul_servers and consul_clients
  #       but for now we must rely on the inventory

  # let us use a group called consul
  - add_host:
      name: "{{ item }}"
      groups: consul
    with_items: "{{ groups.all }}"
    when: groups.consul is undefined
    changed_when: false

  - add_host:
      name: "{{ item }}"
      groups: consul_servers
    with_items: "{{ groups.consul[0] }}"
    when: groups.consul_servers is undefined
    changed_when: false

  - add_host:
      name: "{{ item }}"
      groups: consul_clients
    with_items: "{{ groups.consul[1] }}"
    when: groups.consul_clients is undefined and (groups['consul'] | length) == 2

  - add_host:
      name: "{{ item }}"
      groups: consul_servers
    with_items: "{{ groups.consul[1] }}"
    when: groups.consul_clients is undefined and (groups['consul'] | length ) > 2


  - set_fact:
      single_machine: true
    when: "{{ groups['consul'] | length }} == 1"

  - set_fact:
      single_machine: false
    when: "{{ groups['consul'] | length }} > 1"

  - debug: var=groups['consul']

  - set_fact:
      consul_server_type: "client"
    when: inventory_hostname in groups['consul_clients']

  - set_fact:
      consul_server_type: "server"
    when: inventory_hostname in groups['consul_servers']

  - name: consul - install unzip
    yum:
      name: unzip
      state: present
 
  - name: consul - install bind-utils
    yum:
      name: bind-utils
      state: present

  - name: consul - install epel
    yum:
      name: epel-release
      state: present

  - name: consul - install jq
    yum:
      name: jq
      state: present

  - stat: path=/usr/local/bin/consul
    register: consul_exists

  - debug: 
      msg: "consul does not exist"
    when: consul_exists.stat.exists == False

  - debug: 
      msg: "consul does exist"
    when: consul_exists.stat.exists == True

  - name: consul - get consul binary
    get_url:
      url: "https://releases.hashicorp.com/consul/{{ consul_ver }}/consul_{{ consul_ver }}_linux_amd64.zip"
      dest: "/opt/consul_{{ consul_ver }}_linux_amd64.zip"
    when: consul_exists.stat.exists == False

  - name: consul - unarchive consul
    unarchive:
      src: "/opt/consul_{{ consul_ver }}_linux_amd64.zip"
      dest: /usr/local/bin
      copy: no
    when: consul_exists.stat.exists == False

  - name: consul - add user
    user:
      name: consul
      group: bin
      #uid: 1000
      generate_ssh_key: no
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa
      comment: "consul user"
      state: present

  - name: consul - create dirs
    file: path={{ item  }} state=directory mode=0755 owner=consul
    with_items:
    - /etc/consul.d/server
    - /etc/consul.d/client
    - /var/consul

  - name: consul - systemd
    template:
      src: "consul-systemd.service.j2"
      dest: /etc/systemd/system/consul.service
    vars:
      consul_server_type: "{{ consul_server_type }}"

  - name: consul - server config
    template:
      src: "consul-server-config.json.j2"
      dest: /etc/consul.d/server/config.json
    vars:
      advertise_addr: "{{ consul_advertise_address }}"

  - name: consul - client config
    template:
      src: "consul-client-config.json.j2"
      dest: /etc/consul.d/client/config.json
    vars:
      advertise_addr: "{{ consul_advertise_address }}"

  - name: install firewalld services
    copy:
      src: consul.xml
      dest: /usr/lib/firewalld/services/consul.xml

  - name: reload firewalld
    systemd:
      name: firewalld
      state: reloaded


  - name: activate firewalld services
    firewalld:
      service: consul
      state: enabled
      permanent: yes
    notify:
      - restart firewalld

  - name: consul - start service
    service: 
      name: consul
      enabled: yes
      state: restarted


...
